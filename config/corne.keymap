#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MEDIA 1
#define HYPER 2
#define SYMBOLS 3
#define NUMBERS 4

#define PREV_TAB LG(LS(LBKT))
#define NEXT_TAB LG(LS(RBKT))


/ {
    macros {
        // hold to enable hyper layer and left command at the same time
        hyper_and_lcmd: hyper_and_lcmd {
            label = "hyper_and_lcmd";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings
                = <&macro_press &mo HYPER &kp LCMD>
                , <&macro_pause_for_release>
                , <&macro_release &mo HYPER &kp LCMD>
                ;
        };
    };

    behaviors {
        // https://zmk.dev/docs/behaviors/hold-tap#option-3-balanced
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        // `&lt` using `&hyper_and_lcmd`
        // first parameter is not used, so you can pass anything, e.g. 0
        lt_hyper: lt_hyper {
            compatible = "zmk,behavior-hold-tap";
            label = "lt_hyper";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&hyper_and_lcmd>, <&kp>;
        };

        // . ,
        narf_dot: narf_dot {
            compatible = "zmk,behavior-mod-morph";
            label = "NARF_DOT";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COMMA>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // : ;
        narf_colon: narf_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "NARF_COLON";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp SEMICOLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // ? !
        narf_qm: narf_qm {
            compatible = "zmk,behavior-mod-morph";
            label = "NARF_QM";
            #binding-cells = <0>;
            bindings = <&kp QUESTION>, <&kp EXCLAMATION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Colemak narf (my own flavour of Colemak DH with affordances for Polish and Vim)
        // empty side columns (pretending it's a 3x5, not a 3x6 Corne)
        // home row mods (inspired by Miryoku)
        // layers on thumbs
        default_layer {
            bindings = <
&none &kp Q &kp F &kp W &kp P &kp B    &kp K &kp L  &kp U     &kp Y   &kp GRAVE  &none
&none &bhm LCTRL A &bhm RALT R &bhm LCMD S &bhm LSHIFT T &kp G    &kp M &bhm LSHIFT N  &bhm LCMD E &bhm RALT I &bhm LCTRL O &none
&none &kp X &kp V &kp C &mt LA(X) Z &kp D    &kp J &kp H  &narf_dot &narf_colon &narf_qm &none
        &lt NUMBERS EQUAL &lt_hyper 0 SPACE &lt MEDIA ESC    &lt SYMBOLS RET &lt_hyper 0 BSPC &kp APOS
            >;
        };

        media_layer {
            bindings = <
&trans &bootloader &trans &trans &trans &trans    &kp C_BRI_DEC &kp C_BRI_INC &kp UP           &trans     &bootloader &trans
&trans &trans &trans &trans &trans &trans    &caps_word    &kp LEFT      &kp DOWN         &kp RIGHT  &trans &trans
&trans &trans &trans &trans &trans &trans    &trans        &kp C_PREV    &kp C_PLAY_PAUSE &kp C_NEXT &trans &trans
                     &trans &trans &trans    &kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP
            >;
        };

        hyper_layer {
            bindings = <
&trans &trans &kp PREV_TAB &kp NEXT_TAB &trans &trans    &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans &trans
                     &trans &kp GRAVE &kp TAB    &trans &trans &trans
            >;
        };

        symbols_layer {
            bindings = <
&trans &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans &trans
                     &trans &kp GRAVE &kp TAB    &trans &trans &trans
            >;
        };

        numbers_layer {
            bindings = <
&trans &trans &trans &trans &trans &trans    &trans &kp N7 &kp N8 &kp N9 &trans &trans
&trans &trans &trans &trans &trans &trans    &trans &kp N4 &kp N5 &kp N6 &trans &trans
&trans &trans &trans &trans &trans &trans    &trans &kp N1 &kp N2 &kp N3 &trans &trans
                     &trans &trans &trans    &trans &kp N0 &kp DOT
            >;
        };

        trans_layer {
            bindings = <
&trans &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans &trans
                     &trans &trans &trans    &trans &trans &trans
            >;
        };
    };
};
